1.问题描述：
	>预知：
		>软件：web服务器、数据库服务器、文件服务器
		>实际服务器：计算资源充沛的物理资源
		>请求：用户请求资源的web请求：计算或者静态资源请求


	>内容：故事并不复杂：就是分离和分散。
		>先是所有软件在一个服务器上：
		>再是软件分离在不同服务器上：软件分离。
		>再是软件的功能分开在不同服务器上：职责分离：比如数据库的读和写分离。
		>再是减少重复操作数据反复生成：缓存服务器诞生：缓存反复请求的不变的数据在内存中。
		>再是请求的处理转发到不同的节点上：请求分离：负载均衡:httpd或者nginx反向负载均衡
		>再是请求的就近机房服务器处理：cdn网站加速。减少网络延时：想象内网的速度。同时也分散了请求。
		>再到项目层次的模块分离、服务化：分别都部署到不同服务器上，互相网络调用，而且有调度中心。spring-cloud。服务注册中心。

		>演化目标：一个实际服务器：软件越来越少，职责越来越单一，资源利用率越来越充分而又不过高。
		