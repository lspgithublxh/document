1.问题描述：
	>页面效果：
		>真实如此：
		>模拟出来：
		>假象：


	>基本效果：
		>位置：position:top:left:right:
		>临近：dom元素的padding,margin:
		>大小：width:height:
		>形状：
		>背景：background:background-size:
		>渲染：半透明化、圆角、颜色、字体
			>纯css实现三角形：利用border宽度很宽时--可以看清楚四个border之间有斜边关系。从而将元素宽高设置为0，呈现斜边。呈现三角形、梯形。
			>纯css实现圆角：用上述梯形，若干个，不同斜度，构成圆形。

	>基本效果之间的几种相互作用：
		>覆盖其他元素：
				>z-index非常依赖父级元素的z-index。光设置自己的z-index再高也没有用。
		>悬浮于其他元素：
		>紧靠着其他元素：
		>内容元素居中：
		>内容元素对齐：	
		>内容元素间距：
		
	>动态效果：
		>A事件下B的新效果：比如A:hover B{}。即A元素触发某事件时B元素相应有什么样的表现、样式、覆盖之前的样式、新样式、动态样式。
				    这样导致了事件传递，而且无规律的任意传递。
				  -----这个要求B在A里面，是A的子元素。
				 >相邻元素选择器：+ 即是相邻并列的下一个元素。如A+B就是和A相邻在A后的并列的第一个元素B
				 >之后的所有并列元素选择器：~  。比如A~B就是选择A后面所有B型元素。
				 >属性值字符匹配选择器：[attr~=val] 。就表示属性值中包含指定词汇。属性值以指定词汇开头、结尾。^=, *=, |=等
				 
		>事件导致样式被设置为新的样式，那么这个旧到新的过程：渐变时间可以设置：transition: 转变的样式 转变的时间。
		


		>事件有先后，效果也有先后：比如两个相邻元素，鼠标从一个元素滑到另一个元素，那么依次执行的事件回调就是：A mouseon --->A mouseout --->B mouseon
	>小图标制作：
		> 定义渐渐的变化：@keyframes xx{}  @-moz-keyframes xx{}  @-webkit-keyframes xx{}
		  给某些元素施加动画的样式属性：animation -webkit-animation  -moz-animation
		  静态转变：transform  -webkit-transform  -moz-transform    -ms-transform
			backface

		> 定义字体--字体是图标：
				@font-face 
 
	>实际效果：
	>视觉效果：
	>动画：
		>是一个标签的动画：动画是一个标签的样式的周期式变化。一个周期内，规定几种状态，每种状态对应设计一套样式。从第一个状态切换到转换到最后一个状态就是一个动画过程。
				   # 轮播是一种动画。
				   # 定义一个动画：定义这个动画第一个到最后一个状态的样式
				   # 给某标签使用一个动画：就是指定这个标签的样式的animation属性值：哪个动画 周期时长 时间曲线函数 播放次数 延迟 是否反向播放
				   


2.需求效果的实现：
	>容器：设计它的宽高，本身的层级（block还是inline等）
	       设计多层容器，里面再加容器：子容器也设置宽高，以及容器之间的间隔、位置关系。
			     		   同时子容器就可以描述和设计与外容器之间的关系--比如margin\padding



	>


3.误区：
	>一是父级div遮挡了其他模块。
	>使用了绝对定位，导致跳动，抖动。
	>使用绝对宽度高度，且出现时超过当前浏览器宽高，导致可以滑动，也会抖动。

参考资料：
1.http://blog.csdn.net/comeonyangzi/article/details/42520149（定义字体参考资料）
2.http://www.zhangxinxu.com/wordpress/2010/05/css-border%E4%B8%89%E8%A7%92%E3%80%81%E5%9C%86%E8%A7%92%E5%9B%BE%E5%BD%A2%E7%94%9F%E6%88%90%E6%8A%80%E6%9C%AF%E7%AE%80%E4%BB%8B/（三角形css）
3.http://www.cnblogs.com/amy-1205/p/5796446.html（动画参考资料）

