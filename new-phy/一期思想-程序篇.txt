1.问题：
	>算法设计：
		>关键因素：
			>a.数据结构：处理流程的入口参数、起点参数、起点场景
				>原因：这个世界存在大量的递归结构。
			>b.处理流程：抽象场景接口
				>原因：在时间轴上不同阶段、场景被处理而演变到一个个新的阶段，无数的阶段中经常周期性地出现相似的处理场景，而对这些处理流程进行抽象抽象出接口可以发现处理接口基本是一样的可以通用的（输入参数一样，返回参数一样，处理目的一样）（略微调整，基本一个方法可以在时间轴上不同阶段都被调用），。。从细胞到宇宙。。
				>要求：事务：明确精准定义每一个接口的场景功能：什么初始数据结构，什么处理目的-要得到什么处理结果。
				>


	>设计模式：
		>在外部观察者看来：设计模式就是被调用者提供给调用者的服务模式，服务使用模式，服务使用方法。根据需求而响应的一种实现模式。比如模板模式、工厂模式、单例模式、观察者模式、责任链模式、命令行模式。
		>


	>设计原则：
		>在外部观察者看来，设计原则对是无论调用者，还是服务者，主要还是服务者，	接口定义、类定义、方法定义、属性定义、方法实现定义中的一般规范特征的预防大规模调整修改来扩展、预防扩展产生大量冗余动作冗余操作、预防意外错误操作的建议。。比如里氏代换法则、最少知道法则、依赖反转法则、开闭原则、接口隔离原则。接口编程、职责单一、暴露最终。
	

	>计算机：
		>强大之处：在外部观察者看来就是：
			>（函数内）执行具有三种流程控制特征 + （函数外部）执行中可以调用执行定义的函数
				>说明1：在观察者看来，即便只有一种特征：顺序执行，也能产生很强大的功能了。
				>说明2：在观察者看来，函数的引进，本质是引进新的一种流程控制---跳转，而且是带上数据的跳转；；从而把功能都规范化定义、封装了起来，成为了一个个函数。。计算机的执行，从而本质上就是在执行一个个的函数。
				>说明3：计算机作为最强大的执行者，原因在于它的执行具有4个流程控制特征。从而调用者可以根据这4个特征而将任务通过这四种特征表达出来描述出来、将各个任务组织起来。
			>



				