1.问题：
	>java整体体系的知识：有事没事看看java相关的小知识技术博客-----网络的和计算机级别的也可以
	>问题1：cpu级别的CAS指令：计算之前读内存值A，计算之后读内存值B，当A==B时，将计算值回写到内存，否则返回失败状态。。。乐观锁---能冲突检测，认为冲突概率小且冲突了返回失败就可以而不用对内存加锁。。
	>问题2：classLoader: 限制启动类加载器Bootstrap ClassLoader才能加载某个类：比如限制sun.misc.Unsafe类(CAS操作)。。限制下的访问：
			>使用反射调用的方式来加载sun.misc.Unsafe类：使用它的cas方法：compareAndSwapInt()等
			>使用使用了Unsafe类的类比如AtomicInteger: 使用它的getAndIncrement()自增方法---这个方法转变为指令时就是CAS指令---和i++这种语句生成的指令不一样: 用多线程时有更高的并发性能。
			>数据版本号：AtomicStampedReference对象引用的原子性--解决ABA问题。
	
     >十大基本问题：(除了平时搞应用之外，也要关注这些基础) 每个都一张图简要描述---抽象描述
	>问题3：并发：
	>问题4：集合：
	>问题5：线程：
	>问题6：通信：
	>问题7：加载：
	>问题8：回收：
	>问题9：队列：
     >十大基本框架：(不知其过程设计的根据和原因，不会抽象描述，就不会有兴趣) 每个都一张图简要描述---抽象描述(就像苏东坡一段落一个字、两个字、三个字、一句话描述一样   向上抽象)
	>问题1：springmvc:
	>问题2：tomcat:
	>问题3：springcloud:
	>问题4：springboot:
	>问题5：spark:
	>问题6：kafka:
	>问题7：hadoop:
	>问题8：mysql:
	>问题9：redis:
	>问题10：docker: