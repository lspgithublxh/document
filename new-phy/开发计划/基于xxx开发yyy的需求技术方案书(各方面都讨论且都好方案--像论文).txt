1.营养推荐系统--每天推荐菜单，推荐吃什么。根据生活习惯推荐要买什么东西了，该做什么事情了(以及怎么做：自动搜索附近：给出合理方案和建议)---生活提醒师---生活助手。新闻推荐、音乐推荐。

2.微服务项目生成专家----输入要整合哪些部件：自动生成项目源码/jar/----甚至第三方的插件和源码都给下载好并且给出安装步骤或者授权自动安装好----同时还有相应的管理界面。
 ---也是技术整合专家，管理监控专家。

3.管理专家---如何管理和组织20个人。

4.业务专家---业务想法如何不断的冒出来且奇特且完整且严密且无可反驳无可质疑没有漏洞。

5.书籍推荐算法和验证:
	>有用户行为日志之后的算法:
		>用户维度: U ,有m个维度,每个用户有一个取值,具体取值从数据库和日志里提取计算出来.;不会直接对书籍有需求程度,谁也不知道;用户的根本属性是用户行为,用户行为的度量才是最初可靠的;
		>书籍维度: B, 有n个维度,每本书都确定各个维度有取值,具体取值从数据库和日志里提取计算出来. 提供程度;
		>用户对书籍某个维度的需求程度 由用户的各个维度共同决定: 假设就是线性组合,那么统计规律可能可以表示, 用户的各个维度对书籍的每个维度的需求程度需求因子是确定的(有主因子\次因子\共同因子),从而每个用户的维度取值一定,那么他对书籍每个维度的需求程度就是确定的;.那么只需要和书籍的提供程度向比较----直接欧式距离比较,那么就可以得出相似度了;
			>用户行为决定的用户需求: 用户行为 用U 维度度量;而用户对书籍的需求是输出D;中间这个推理和计算所根据的相关关系是未知的,本身也是一个待求解的;但是可以模糊的给一些初始值;线性相关关系就通过日志训练出来;
		--验证过程:
			>已知量: 用户的点击历史;看了哪些维度\标签\书籍; 相当于通过结果拟合出行为-影响需求矩阵, 看了书籍--需求为满分10,看了标签-需求为5,看了维度-需求为2; 那么对于每个用户,可以计算出他对书籍的需求向量;n个用户,就得到一个用户度量矩阵Unk+ 一个用户需求矩阵Ukm, 而关联矩阵Mkn和两者的关系为;Unk * Mkm = Bnm , 从而就是n个线性方程组的求解, n个方程,拟合计算出k个未知量; 在n>>k时,过拟合;最小二乘法,也可以计算出来;
				>调节Mkm的各个值,来使得 结果 和 Bnm 的误差最小; 这样来得到的Mkm就是最优的值-----所谓的训练出来的值?当用户数据更多,则每个用户自己的需求在改变,而用户数也在增多;使得训练结果可能更加权威;
		--可能产生的问题: 即不仅仅只是关注要实现的功能;		
				