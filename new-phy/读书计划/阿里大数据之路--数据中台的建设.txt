---------读书战略：自顶向下，从应用层到底层细节。先熟悉的常用的，后底层的不常用的。精读好书---《深入理解系列》
--------es的处理思想都对应有 相应的“某种举动 及其导致 的问题”
>需求背景-痛点陈述：现实开发中遇到了什么痛点导致XXX的开发？  
>那么痛点的原因、产生的条件：分析是什么环境、什么动作 什么效果什么目的 等精准形容词的事实描述 导致了痛点的必然发生，难以避免？。条件-痛点。原因-结果。
>则可以消除痛点的最简单的精准事实陈述是什么：修改“条件-痛点”陈述的哪一部分就可以导致没有痛点产生。 要做的根本事情是什么：
>那么新陈述表明的解决动作是什么：
>新情况的新痛点是什么：新举动、新环境会产生的新痛点描述出来， 继续上述4条操作。
>学习要有战略和格局：过于零散、孤立、末支、叶子的知识点就没必要化太多时间，懂得放弃。聚焦在根节点、枢纽节点、产生分支的节点、主干知识点、枢纽知识点、关联到很多知识点的知识点上。
 >对于主干知识点：要有全新的认识视角和进行精细的描述，大量的提问和好奇和进行必要的实验以获取支撑观点/导出观点的数据。
 >规范是工程最独特的特征.
 >慢慢读：
>一种新技术的学习：
 >它面对的情况和问题、它的世界观、它的方案、它的方案验证/论证/能处理的解决的所有情况及能成功处理的理由/功能边界
  >所有的软件：都可以看作是向上封装一层接口，根据自己的世界观封装底层而向上/对外提供统一的(统一的更简单的更直观的更业务的更少底层信息的)接口，底层包含一系列的第三方的插件/构件/组件；内部则去做兼容和调用(对底层)(对上层则做逻辑分解和底层实现)。

>阿里巴巴的观念：
	>自己遇到的解决的痛点，也是别人会遇到的需要解决的痛点。则将自己的经验能力提取出来，做成通用的服务，互联网服务，通过网络都可以享用到这个服务。从支付服务，服务自己，到服务别人--服务更多的商人--通过卖服务能力赚钱，且首先这个服务能力先服务自己，服务做好自己体验好之后，再拿出来服务更多的人。这就是阿里巴巴的服务理念。让大家通过网络来享用到自己亲自体验过的强大的丰富的各种服务能力，这就是阿里巴巴的服务理念--梦想和信念。通过网络，也可以说通过手机、pc浏览器；甚至说屏幕。因为网络也是服务能力，手机也是服务能力，因为可以当作服务的中间媒介---通过这个媒介享用到真正要享用的服务。
  
>举动-痛点：产生了大量的数据--EB级别，如果不进行有序有结构的组织和存储，如果不能有效利用并发掘它，则带来巨大的成本。
	>解法/解决方案：建设高效的数据模型和体系，使数据易用，避免重复建设和数据不一致，保证数据的规范性;提供高效易用的数据开发工具;做好数据质量保障;有效管理和控制日益增长的存储和计算消耗；如何保证数据服务的稳定，保证其性能;
	>数据体系：
		>数据采集：高性能、规范地完成海量的数据的采集，并将其传输到大数据平台。web端：AplusJS, App端：UserTrack
			>面向各个场景的埋点规范：
				>浏览器页面日志采集：
					>目标量：页面浏览量和访客数、页面交互日志-操作日志、媒体在页面上的曝光日志、用户在线状态的实时检测等。Cookie大部分还是服务端的响应报文里的cookie报头指定浏览器要存储的，当然客户端js也可以指定浏览器存储。
					>采集时段：页面在加载时，js执行采集。日志采集脚本，由服务端响应页面时动态植入页面。
					>采集信息：当前页面、上一个页面、浏览器和分辨率。。。
					>信息发送：发送给日志服务器，日志服务器先缓存在内存里。
					>日志解析：服务器端有专门日志处理程序顺序读出并按照约定的日志处理逻辑解析，后转存到标准的日志文件中并注入实时消息通道。
				>日志清洗和修正：
					>识别流量攻击、网络爬虫、流量作弊：依托算法识别非正常的流量。
					>数据缺项补正：取值归一、标准化处理、个别数据项回补和修订。
					>无效数据剔除：失效冗余的数据项。
					>日志隔离分发：进入公共环境之前做隔离。
				>关系型数据库对日志装载和使用：
				>无线客户端的日志采集：基于一个个事件，用户行为就是事件，发送事件即可。
					>无痕埋点：
					>SPM信息透传：
			>高性能高可靠的数据传输体系：TimeTunnel, 包括数据库的增量数据的传输和日志数据的传输；支持实时的流计算和各种时间窗口的批量计算：
				>数据同步工具：DataX
			>
		>数据计算：
			>数据存储及计算云平台：离线计算平台MaxCompute，实时计算平台StreamCompute
				>数据仓库：
					>离线数据仓库：每天凌晨处理上一天的数据
					>实时数据仓库：处理几秒内的数据：如数据直播大屏
				>数据仓库的加工链路：
					>操作数据层：ODS实现从数据资产到信息资产的转化，并对整个过程进行有效的元数据管理和数据质量处理。
					>明细数据层：DWD
					>汇总数据层: DWS
					>应用数据层：ADS
			>数据整合及管理体系：OneData构建统一、规范、可共享的全域数据体系；避免数据的冗余和重复建设；
		>数据服务：数据源架构在多种数据库上：如Mysql, RDS,Table Store;
			>统一的数据服务平台：通过统一的接口方式提供数据服务。
				>简单数据查询：
				>复杂数据查询：
				>实时数据推送：
		>数据应用：搜索、推荐、广告、保险、文娱、物流等。
			>实时数据监控：
			>自助式的数据网站：
			>宏观决策分析支撑平台：
			>对象分析工具：
			>行业数据分析门户：
			>流量分析平台：
			