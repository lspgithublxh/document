   先拔高java语言，然后开始向python,c#,c++这些语言进发：学习顺序--掌握顺序--练习顺序---制作顺序
>问题描述：
    >问题描述:
	第一部分：语言特性：
	>常量、变量：存储位置和定义
	>基本运算的使用：算术逻辑关系
	>基本控制结构：分支、循环、遍历、递归
	>基本数据结构：数组、对象、元组、list, set ,map：定义和内存形态和使用
	>面向对象编程：类的定义、属性、方法的定义和分类（多种定义方式，各有不同的含义）	

	第二部分：编译器---解释器：
	>对各部分代码是怎么编译的，各种类型的代码怎么处理的、看作的。
	>对于新语言特性，怎么处理的。

	第三部分：常见基本功能实现：
	>文件处理：
	>网络连接处理：
	>多线程并发和管理：
	>操作系统脚本调用（基本调用）：
	>事件编程：gui图形界面、操作系统事件

	第四部分：第三方调用：
	>操作系统部分api操作调用：
	>数据库访问操作：
	>网络协议编程：http、smtp、pop等协议。
	>其他各种软件调用编程、文件规范编程。
	>浏览器调用-网络协议通信调用：http编程、smtp邮件编程调用。
	
	第五部分：项目需求：
	>规则：业务流程、模拟过程。模拟活动、模拟游戏。
	>技术选型：
	>整体架构：
	>前端后端：基本业务逻辑。比如过滤器、servlet、数据库配置、登录页面。。。。。基本搭建起来。
	
	第六部分：底层过程原理：
	>资源的申请和释放：
	>多核CPU的利用和GPU的利用：
	>多线程管理机制：
	>通信连接的建立和释放：
	>线程通信和进程通信：
	>语言独特特性：


