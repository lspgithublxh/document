					生产： 组织结构建议和可复用中间件
1.对于一个复杂的对象，要先对其中内容分类，然后可以分离出来。分离出来，则可以异步迭代，动态复用。减少等待，减少重复。
						分类分离例子：（中间件（可复用模块，可复用代码）和共同组织结构）
 1.1tomcat / 项目 是对javaee平台的分类分离实现。即有共同可以使用的代码部分。
 1.2mvc是对项目的资源分类看作。
1.3 ssh是对项目的内部的功能分类，并分离出来的共同的三大部分，共同功能（可配置而具体化）。即任何web项目也有共同可以使用的代码部分。
 1.4controller/service/dao是 控制层的功能分类而建议对项目中控制层代码分离出来独立出来的三个部分。建议的组织结构，以便提高项目代码的复用度。
			建议任何web项目的控制层代码的组织结构，组织方式。本身并没有任何可以供任何项目使用的代码，即不是中间件，没有中间件。
 1.5head\body\foot是 对页面内容的分类，而建议的页面的组织结构。。页面本身全部由用户写，并没有插件。
1.6 对最佳编程风格、类的设计方式、关联方式、引用方式，对任何流程进行高度概括的一般化的描述方式（忽略具体实现，不带具体特征，全是普遍方式）的
   动作范围的限定、方向的指示、。。对类最概括最一般的描述、对方法最概括最一般的最普遍的描述方式的分类，就是6大设计原则。这是组织结构的建议，
  也不是中间件。同理24种设计模式也是。
1.7Bootstrap就是对前端页面内容的分类，采用最佳样式修饰后的部件，部件是中间件，可复用的部分。是对每个部件专门迭代修饰、升级修饰后的可以共同使用的大家都喜欢的
            修饰后的部件。
                                             分离之后高级演进的例子：
1.1Bootstrap。就是对前端页面中的各个部件在样式修饰方面高级演进深度演进后所构成的一套产品、一套可复用的多种多样的中间部件。