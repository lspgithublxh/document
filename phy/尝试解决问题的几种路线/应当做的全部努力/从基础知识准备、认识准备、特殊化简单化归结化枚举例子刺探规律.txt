1.问题描述：
	>遇到的实际情况：需要大量算法，尤其是对一切问题的建模计算算法。
			以后的主要任务就是：积累算法代码。。。自己编写的，独立编写的算法代码。对各种问题的算法代码。这个甚至可以说是2018年最重要和最主要的和最有价值的任务。
				>好处：可以培养起对一切问题建模的研究思想，同时规范动作---让自己的思想可以快速落实和发展。。时间过得很快，差距会和其他人拉开，尤其如果是还没有形成一种本能式的思考、研究思路。
				>事务： # 对一切事情分析（基于一条条若干有关联结构化全面涉及的观点、原则、考虑、计算、方法的聚合，决断和计算选择考虑的聚合，而做出正确的决定、设计、安排、布局、计划、打算，甚至是表达、措辞、相处、定态度。。分析而得出观点、得出判断、得出方法、得出方针得出路线得出态度得出预测得出办法，得出规则得出根据得出原则得出设计得出解决方案，不仅得出而且使用而且验证证明--如果没有适用范围-就没有任何意义）
					# 对一切问题建模（建立描述模型，度量模型，科学研究的目的正是找规律，找事情的规律和性质和联系，从最优的到只比硬来硬算直接算最笨的方法算好一点。。以计算1+...+100为最常见的例子。。而且要相信，看似没有规律的也可能有规律有可能有性质有必然性的东西，这些东西就会在认识这个事物事情中发挥作用让人走得更远。。比如字符串的相似度---非常经典的--看似没有规律的想象中甚至都是没有规律的---但是图示出来就发现有规律了）
					# 对一切事物描述（描述，建立概念体系，抽象-具体的概念体系，图示表示模型，表示图示体系详略体系，多种层次的描述，多种角度的描述，多种方式多种语言的描述，简略的描述，抽象的描述、具体的描述，描述是极其有价值的-本身也有一个方法体系，描述得好可以发现事物的规律事物的性质，事情的性质事情之间的关系。描述得好可以把一个复杂的系统以一种很简单很自然的方式呈现出来，让人很容易就理解掌握发现它的设计原则-设计方法-设计点的考虑-设计点的思想来源-观点来源。。。清晰流畅，形象逼真，兴趣盎然，轻松简单，不让人觉得混乱迷惑跳跃不必然强行奇怪还是不懂还是不知所措还是不知所云还是排斥还是不喜欢还是没兴趣，，这是教育、宣传和鼓动、说服的力量）
					# 对一切性质显现（关系，联系，必然性，确定性，关联性，不变性，等价性，等值性，等效性。。事物内具有的，事情具有的，系统具有的，活动具有的，明显的隐藏很深的很抽象的和直观很远的看似没有联系的联系很远的，都需要找到，观测，测试出来，刺探出来，制作活动制作图示制作问题来暴露展示出来显现出来明显化可描述化可精准语言描述出来，刺激激励响应出来，还原恢复出来。。来为计算事务、推算事务、设计事务、算法构造事务、描述事务、分析事务做铺垫，做预备，作资料作基础作工具作框架作仓库。。而且由这些东西本身就可以推出很多新的结论新的判断新的观点，，而接着又可以联系实际联系其他相关而不断推理下去，而得到更多新的发现和新的结论。。这是很强的显现能力，需要深刻的显现思想、显现方法、显现观点、显现路径、显现方针路线、显现工具。。比洞察和探索更精准地描述了这种操作这种活动这种事务。。不仅显现，而且验证）

 	>预备：
		>平时独立思考和制作：各种问题的算法代码、各种服务的工具代码-产品代码。。制作范围和制作深度要大大超过各种专家教授，甚至院士。
			>
		>具体的显现路线、显现方针、显现思想、显现方法、显现观点：
			>显现路线：
			>显现方针：
			>显现思想：
			>显现方法：
			>显现观点：




2.态度：
	>有志者，事竟成
	>贵有恒
	>少做琐事、少说空话
	>每天都在提高自己，每天都有思考和制作上的积累


参考资料：

