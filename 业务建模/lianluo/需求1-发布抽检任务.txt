>任务创建：没有涉及到 配置升级策略。具体和VIN有关。
------------具体需要的做的事情：
	>创建任务：
		>如何给汽车VIN配置 升级策略？：车型车系使用的。所以考虑给单独某辆车配置 默认策略？---还是动态修改。--还是强制不用其他策略，直接代码中的策略？--只要判定这个任务是 抽检任务即可。
			>汽车是如何使用策略的？：何时 什么业务中。
			>任务触发方式 可以调整。
	>查询汽车当前是否已有升级任务? 有则取消。---查看汽车升级状态表ota_vehicle_upgrade_status该汽车的最新的升级状态：
		>如何判定：
			>1.下发消息已发送的证据：验证通过后，会下发(ota_vehicle_download_notice保存:任务id+车vin+包id+版本+下发成功代表的messageid)；任务isExecuted会更新为已经执行。下发服务(iot-device-shadow)下发内容(taskid/version/vin/packagefullid/upgradetype)
				>包id来自：
					>目标版本为ota1支持的时:ota_package_total_full (通过 车型车系版本 三个参数 查询) 取id 。 ota1版本：版本号中间段=1
						>验证：对正式任务有 包状态 限制。 
					>目标版本为ota2支持的时：通过ota-service 间接 从 ota_package 取(通过 车型车系版本 三个参数 查询)id
						>验证：对所有任务有 基线包描述信息存在：通过 baseline_id 查 ota_baseline_description 里的 description存在。
				>升级策略验证：一句话描述。
					>该车系车型默认策略存在：  即 车型车系id 在 ota_upgrade_strategy_veh_relation 中 。
					>该车系车型所有策略id中：所有策略id保存在 ota_upgrade_strategy_veh_relation 中 。
						>每个策略id:  关联到的ecu 列表 中 不能存在 没有配置 升级顺序的ecu。
				>车辆校验：一句话描述。
					>vin列表不能重复和为空：
					>对每辆车vin: 
						>车型车系和平台一致：ssp-vcs-service
						>对工厂任务要求车的状态必须是总装下线/ok下线/打印合格证 之一：其他类型任务 无限制。车的状态来自 ssp-vcs-service
						>黑白名单要求和车辆与任务匹配要求和车辆当前升级状态要求：
							>1.非诊断仪来源的：需要黑名单校验(ota_vehicle_blacklist);不是强制升级白名单上的汽车需要(ota_vehicle_whitelist):车辆用途和任务类型匹配，车辆状态和任务类型匹配,固件版本不能为0，最新的车辆升级状态表明车辆的 升级触发类型 如果是普通任务触发的 则表明的车辆升级状态 不能还在 升级中/等待升级中/回滚中(相当于上一个任务触发的升级如果还在执行，那么本次的任务就不再下发)。
						>目标版本的要求：1.和当前版本相同的且不是诊断仪来源则 必须 在同版本白名单中；2.低于当前版本的 必须 在 降版本白名单中。
						>支持配置字的变量车型的汽车的配置字必须存在：汽车的配置字来自 ssp-vcs-service, 是否支持来自mongodb
		>如何取消：汽车升级状态 查看 ，如果正在 升级 如何取消？未开始的任务如何取消？
			>汽车正在执行升级任务能不能被终止的方法？
	>是否下发抽检任务？：任务验证：
		>基线包校验 阶段：版本不比较。 全量包
		>升级策略校验 阶段：默认升级策略存在，且为：版本不比较。 全量包。
		>车辆信息校验 阶段： 当前版本 等于 目标版本时 无 限制 。。其他同之前。
	>汽车主动下载升级包描述信息和升级包文件？：收到下发命令后。同时还下载其他信息。
		>如何给汽车返回完整正确的升级包描述信息？：汽车请求中带有 当前版本和目标版本
			>统一要求：对车辆和任务的要求	
				>黑白名单限制要求和车辆与任务匹配要求和车辆当前升级状态范围要求：
				>包id和基线描述存在要求：通过 车型车系版本 就要匹配到。
				>默认升级策略存在要求 和 车型车系的每个策略的每个ecu都要配置升级顺序 要求：
				>支持配置字的变量车型的汽车的配置字必须存在的要求：
			>查找汽车的升级策略：来源要求：先精确匹配后 粗略匹配：即先从汽车-策略 关联表里找：ota_upgrade_strategy_vin_relation	，没有才从 车系车型-策略 关联表里找。ota_upgrade_strategy_veh_relation
			>查找汽车的升级包：
				>目标版本为ota1版本：要求：1.主体信息 来源为ota_package_total_full，且是通过 车型车系版本 得到的 -且有 包状态要求；如果升级策略的包类型不是全量包 且存在 增量包，则主体信息采用增量包。2. 是否版本比较 则看 升级策略中说明的如果不是要比较而是自动 且此时 上一步采用的不是增量包 且 当前版本和目标版本不同 则也是要比较；3. 加密大包的对称密钥的解密 调chehejia-service-bks-app服务实现；4.升级提示信息 从ota_package_total_full获取。5.升级结果 信息 也是从 ota_package_total_full 获取。	5.ecu包信息列表 来自包关联的ecu列表 经过 策略关联的ecu列表的过滤 之后的 ecu列表：策略关联的ecu列表信息 从ota_upgrade_strategy_ecu_relation可以ecu列表然后需要经过排除汽车的配置字设定的需要忽略的ecu集合，包关联的ecu列表信息 从 ota_package_total_full_ecu/ota_package_total_delta_ecu 获取，过滤方式为：包关联的ecu需要在策略关联的ecu列表里 且 策略关联项表明该ecu配置了升级顺序，则这个ecu id符合要求，接着获取它的全包信息ota_package_ecu_full/ota_package_ecu_delta(含fileName/fileSize) 和 基本信息 ota_base_ecu，ecu包类型(组件包/ECU包) 
				>目标版本为ota2版本：要求：1.直接从ota-service查询出包实体(含ecu包信息列表)：使用 vin+当前版本/目标版本+包类型。2.需要补充的信息：是否版本比较-仍然是要求 全量包+目标/当前版本不同。3.需要对 ecu包信息列表进行过滤：要求ecu包信息，必须在策略ecu列表中，且策略ecu项必须配置了isUpgrade=1要升级。
			>升级包序列化后持久化：存到mongdodb.
			>升级包描述信息就是这个“升级包”信息：返回它。
		>如何给汽车返回完整的包？：汽车自己如何解密这个包？(跑在汽车上的软件执行的事情)	
	>汽车主动上传进度信息？：
		>如何接收处理汽车上报的进度信息？：汽车上报请求中带有 vin +事件信息列表。
			>要求按事件类型处理：
				>下载包的进度报告：事件信息转为进度实体 存储到 ota_vehicle_download_progress 
				>升级进度报告：事件信息转为进度实体 存储到 ota_vehicle_upgrade_progress 
				>升级状态报告：事件实体转为状态实体 存储到 ota_vehicle_upgrade_status 。 然后 要求： 1.查看报告信息 是否是 升级失败信息(条件：报告中的错误类型被包含 | 错误类型=下载失败/准备升级失败/回滚成功-失败/升级失败/外设升级失败)： 判定为是 升级失败信息 报告  且 触发类型 不是 ADI(售后诊断仪注入)， 则要发送消息：接收方=ota运营小助手标识。2.判定汽车为销售车 且 已激活 且 触发类型=强制升级类型/普通升级类型 且 报告的错误类型=升级失败/回滚失败/回滚成功/外设升级失败/内包含, 则要创建工单并发送：升级失败工单群组。3. 根据指定错误类型list 查看汽车升级状态表  是否有错误记录，如果有 则 要 机车日志回放(回读车机上某一时间段内的日志ssp-vds-service)。 。 4.ota任务补偿：(条件：已激活的乘用车 & 错误类型=下载失败/准备升级失败 & 内异常不包含)补偿动作： 通过messageid查ota_vehicle_download_notice得到taskid (或者通过vin查任务-vin表得到匹配的taskid), 得到taskid查taskvin表得到补偿次数，不可以补偿 则调 mms-api 来发出不可以补偿的信息；可以补偿则验证后 更新taskvin isResend=true。 5. 错误类型的保存(条件：任务类型=强制升级类型/普通升级类型，错误类型=升级失败/回滚成功/回滚失败/外设升级失败) 6.手机消息推送：新版本推送/不满足预判条件-升级模式进入失败/通知VCS更新车辆固件版本& 推送升级失败通知z推送升级成功通知/推送升级失败通知..。。7.升级状态 以 mq消息形式 发送 到一个主题(ota-batch服务、圈子服务订阅了)
				>升级命令报告：触发定时升级、立即升级、取消定时升级时会上报此事件。事件实体转为命令实体 存储到 ota_vehicle_upgrade_command
				>清E方结果报告：完整性检查  后 事件实体转为 清E方实体 存储到 ota_vehicle_eeprom_clear。
	>升级失败信息：前2个要做。
		>汽车如何开始下载：
	
	
	
	a.抽检任务的策略的实现：
	-----如果新增一批策略，则需要 在 汽车上传进度消息 完成的时候 要 找到taskid ---并判定为 抽检任务的升级完成消息/异常消息 ，然后将升级策略假删除。。。劣势：可能会影响其他任务的策略。
			>抽检策略和汽车关联的创建时间：抽检任务创建时候太早？ 任务下发消息时候 ？ 车辆获取 升级包描述信息的时候？---此时肯定可以的。
	-----如果不新增策略，而是直接在获取包描述信息时 直接 设置 包类型、是否比较版本 等实质的策略内容。。劣势： 没有策略记录。 
	b.抽检任务的验证：
	----专门验证时，对同版本白名单 不做限制。
	---其他不变。
	
	OTA专项群：工单群消息发送：https://open.feishu.cn/open-apis/bot/v2/hook/3d1b0c33-a7f6-4ce5-a808-a644c1646656
	
	
	
	
	
	
1. 任务发布（web）：
  参考formal_task.html、formal_task.js
  关键点：任务校验（taskVerification）、任务创建（submitPublishTaskForm）
2. 任务推送（app）
  参考 OtaTaskInfoJob
  关键点：任务业务校验（taskValidation）、执行推送（executeSendTask）
3. 车辆收到升级通知
4. 获取升级包描述信息（app）
  参考OtaPackageController
  关键点：获取固件升级包描述信息（queryPackageTotalInfo）
5. 车辆下载升级包文件
6. 解密验签，开始升级
7. 车辆上报升级数据（app）
  参考OtaReportService
  关键点：事件上报（reportEvent）	
  
  
  
 