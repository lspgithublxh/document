1.事务本质上要解决的问题:并发读写数据库最终导致数据不一致和不正常的问题。
  本质： 是为防止上述问题发生，而对并发中的操作，本身在被执行时要求具有的表现出来的特性，（ACID）,它认为如果具有，就不会发生上述问题。
  每组操作都视作“事务”  
  要求每个事务操作的都是隔离性的、备份性的数据库数据，且这一组操作（事务）像原子一样要么成功（则提交）、要么失败(则回滚)，成功（即提交后）后则操作的备份数据会覆盖掉数据库的原始数据从而数据库数据发生持久性的（不可回复）改变，同时通知其他事务数据库的这个数据已经发生了持久性改变而必须要一致地以当前的数据为准进行操作。


2.数据库在实现并发中的操作具有上述四种特性时，做了两件事：
（1）操作内要有指定的标记：事务开始、提交、回滚（对并发的操作本身的特殊描述、特殊指定、特殊要求、特殊标记。）
（2）对数据库选择性施加两类锁：独占锁、共享锁。具体的锁也只有这两大类。具体到行级锁和表级锁。（读锁、写锁、乐观锁、悲观锁分别只是具体读或写的时候怎么加、加什么具体锁的一种模式、模型）
