1.主动绑定事件和激活事件。
  1.1绑定事件：使用jquery方式：
		针对的对象：mx.views.View一般的对象就可以。即框架对象就可以.on("activate", function(e){})
			    		也可以激活事件：mx.views.View.trigger("click");


1.2  一个mx对象的$e属性是什么？
    应该是这个mx对象的jquery对象。


1.3mx提供的事件体系有哪些？
	每种控件有什么专门的事件？
   比如ToolBar有congtrolbuttonclick事件。
   ToolBar的$e属性对象有resize事件。



1.4事件对象e的全部内容？


1.5注意看前端的实现是什么？比如ToolBar居然是div
    第二看前端对元素绑定的事件是怎么实现的---因为已经不是原生的事件。而是自己写的模拟出来的。
    第二种方法是自己重新实现/覆盖掉事件。比如点击事件。
    第三是看这个mx对象/组件本身提供了哪些方法？是否提供了需要的方法？
    

1.6可以把mx框架看作是一种类似jquery的封装对象，该控件因为也提供了足够的处理方法、包括事件方法。也包括style的设置！！
   如果要更精细的style设置，那么就用它的$e对象---即jquery对象就可以了。



1.7mx框架对象的本质就是一个普通的javascript对象。MXObject函数中this说明了一切！！而这个对象的.$e属性就是它的jquery对象！！
    随着对象的创建，this在不断的变化。指向最上一次的函数！！（或者说最上一次的对象）..。。
   它里面：$e = $("<div/>"); Control类里已经定义。
    但是这个$e是很大范围的，是包含了标签的外部div容器型对象。
   所以能用mx框架对象的方法解决，就不用jquery来了。


1.8 weblet对象。其中有方法mappath()。其实就是一个地址转换的方法。
  weblet对象的生成：在注册了weblet 即会有id描述后，就会创建一个weblet对象--且引用变量名就是webletId。所以后面的view\ viewController中都可以使用这个webletId代表的weblet对象。


1.9mx框架对象的addControl到底做了什么？为什么一个mx框架对象有这种方法，是加的元素吗？继承来自哪个对象？
   一层一层的包裹，容器中加control控件。
   第二，用了addControl,为什么又提供get获取到构造的那个control的方法？


1.10load方法做了什么？主要是看底层实现做了什么？
    关键是最后container做的load

1.11tab在切换的时候耗时太多！！是否可以先切换过来，在做数据的增加？即使用异步加载！


1,12viewcontroller负责定义对view的各种事件。
   view负责定义数据容器和数据模板，和绑定controller的各种事件。

1.12构造方法的时候为什么会执行init方法？


1.13三大数据控件：dataForm, dataGrid, dataTree
   javascript无参数函数的有参数构造方法。