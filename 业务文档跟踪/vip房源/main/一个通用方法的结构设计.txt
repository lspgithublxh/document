1.问题：
	>原则：接口编程、泛型编程。（匿名内部类编程）（抽象设计）（凸显核心功能根本功能）
	>目的：
	>考虑：详细编程时-调用编程时
	>内容：只考虑固定流程，和调用接口方法。不负责具体的接口方法的实现，不讨论更详细功能的实现。
		>调用者在调用该抽象设计的方法，输入参数的时候--使用接口的实现类--即用户在调用处自己提供实现类---即便是用匿名内部类也可以。
		>方法中匿名实现类的好处：可以直接利用上下文的数据进行类的处理方法的构造：即在运行时才构造一个实现类。否则需要实例化并对这个实例设置一系列属性：而利用上下文直接编程，则根本不用（而如果有大量的参数设置--代码核心功能就不凸显）。匿名实现类可以大大减小固定区-方法区的开销（因为即用即走--用完就回收）
	>观点：
		>类和实例：当作一个容器