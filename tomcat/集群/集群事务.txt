1.必要性：负载均衡和处理单点故障。
2.集群：通过网络--进程间通信和共享内存。
 2.1要解决的问题（或者优势，独特优势）：
    a.高可靠性：即容纳、处理单点故障。
    b.高性能计算：即复杂运算的并行处理、并发进行。
    内部要解决的问题：把负载压力（请求）合理分配到集群中的每台计算机上。
 2.2请求响应角度|外部角度看集群系统的特征（工作模式）：
    所有的请求是同一个地址（主服务器），请求在内部均衡转发，节点服务器独立直接响应客户端|客户机（或者先返回给主节点）。

3.服务器带宽和吞吐量

4.负载均衡（多台响应服务器，将客户机的请求均衡转发到响应服务器上）：
  本质上：就是要实现每台响应服务器都能充分工作、充分响应。
  4.1实现技术： 
         a.转发角度：让DNS服务器帮忙随机确定一台目标响应服务器：即配置同一个域名--对多个响应服务器的ip地址。。（DNS成了客户机代理）
         b.主节点（服务器）对外--子节点组建局域网角度：让主节点把请求均衡考虑地转发到局域网中某台服务器上。
                                            主节点看作是局域网服务器的对外代理服务器，也可以看作多个客户机的对局域网中服务器的代理服务器。而标准代理方式是客户机的访问多台外部web服务器的代理服务器---代理的是一个客户的请求。
                  --------这就是反向代理模式。（代理服务器完全不必要有NAT地址转换功能）
         c.主节点是网关（路由器），有NAT地址转换功能（外部地址和内部地址之间转换）：该网关拥有多个外部地址--同时也拥有多个内部地址--并且外部地址内部地址之间有映射。使得外部网络请求该网关的某一个外部地址时被转发到了映射的内部地址上，而该内部地址对应的服务器也可以通过网关
                                 和该外部网络通信。只要客户机不同的外部ip地址而这些地址都是该网关所有的，那么就可以被转发到内部地址---内部服务器上。实现负载均衡。

      --客户端代理   --服务端代理   --网关代理
  4.2均衡例子：
     服务端代理方式：  Apache + JK2   。Apache server + tomcat server
                  前端处理器：  