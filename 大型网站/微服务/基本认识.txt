>
>基本模块：
	>服务注册管理中心和服务中心访问客户端：Eureka Server  和 Euraka Client
		>Server: 存储各个服务所在的机器和端口号
		>Client: 连接到Server 获取某个服务的所有机器和端口。
	>服务调用客户端：Feign
		>使用方式：@FeignClient 接口注解。从而动态代理这个接口，发送相应的数据到指定的服务方，获取数据后返回给客户端。
	>客户端负载均衡：Ribbon 
		>使用方式：作为Feign的一个获取服务ip的工具使用，此工具从服务的所有ip端口中轮询/依次/Round Robin算法方式获取一个，然后Feign就可以使用这个ip-port来通信了。
	>服务调用的隔离、熔断和降级：Hystrix
		>使用方式： 作为网络线程池的提供者为Feign服务，为每个不同的服务调用生成专门的线程池----做到服务调用过程互相隔离；服务访问不通而判定为服务挂了则标记为熔断nmin，下次直接返回，或者先插入数据库记录每个调用的各个详细参数---以便后续手工恢复----即为降级。即Feign在调用服务的时候，是并行的，先取一个线程放入网络调用请求任务---然后阻塞等待---所以Hystrix是个底层接口。是分布式系统稳定性的强需求。
	>前端直接调用服务的代理：Zuul 
		>使用方式：各个前端直接请求Zuul网关，网关负责具体的服务调用。---同时还会做限流、降级、安全、认证授权等等。
		
		
		
>拓展模块：
	>服务配置中心-配置管理平台：Apollo。。相当于wconfig
	>数据总线：kafka
	>调用链监控：CAT (类似zipkin)  侵入式，需要明确的jar的客户端。相当于Wmonitor。但是图表更丰富，还可以发送异常信息。
		>系统层监控：+基础设施监控：zabbix, falcon
	>日志监控：ELK
	>健康检查和告警系统：ZMon
	