1.osgi的web请求怎么实现，web模块肯定是非常重要的。
2.模块的执行顺序？
	可以配置，startLevel就指明了模块的执行顺序，因为模块bundle之间运行是独立的，而程序中方法中会相互引用相互依赖。
	（运行独立，程序依赖）。
	独立运行即是指会按照startLevel而依次的执行各个模块中的activitor中的start方法。这个是完全不同于直接运行main方法的模式。
	也不同于请求驱动的web项目执行模式。而专门封装的一个框架：执行：依次运行各个模块的一种执行模式。
	就像框架注册了模块后，遍历了一遍模块一样！！！像是观察者模式、发布订阅模式。（模块就是订阅者，请求就是订阅的内容）。。
  ---- 形成一种请求启动模块的效果！！！
	----不同的请求启动不同的模块的效果！！
	----所有模块共用一个BundleContext,或者说被一个BundleContext管理！！

3.服务的注册，也是注册到BundleContext里面。。且这些服务必然就是export package里面的接口，不在export package里面，注册了也不能被其他bundle使用。只能被bundle内部的其他服务使用。
  被其他bundle的其他service使用。
  事件handler也是一种服务，也需要注册。只是说这是osgi框架写好的服务，核心的服务，但是用户使用的时候也要注册。因为不会自己注册。
  尤其是用户自己写的一个扩展原生事件handler的handler(事件服务）。//毕竟自己写的服务


4.框架依赖、环境依赖。项目依赖。
  项目依赖可以项目直接导入。但是不意味着框架就可以执行项目了，常常还要在运行时配置环境依赖、框架依赖的bundle。run configuration才行！！

5.查看已经注册的服务，即框架本身就注册了的服务，开发者只需要引用这些服务即可。

6.纯粹的问题：bundle之间也会冲突--而且是不同的类型，而不是版本冲突！！
  如依赖链。只能通过一个依赖链。多的一个则要删除！！所以bundle不是越多越好！！！